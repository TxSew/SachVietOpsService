name: 'Build and push to ECR'

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
        types:
            - closed

jobs:
    BuildAndPushImageToDocker:
        name: 'Build and Push to Docker'
        runs-on: ubuntu-latest
        if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js 16.x
              uses: actions/setup-node@v1
              with:
                  node-version: '16.x'

            # - name: Install dependencies
            #   run: npm install
            # - name: Build
            #   run: npm run build

            - name: Run commands over SSH
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USERNAME }}
                  key: ${{ secrets.SSH_KEY }}
                  port: ${{ secrets.SSH_PORT }}
                  script: |
                      echo "Connecting to remote server"
                      cd /var/www/quangthanh/book_server
                      git reset --hard origin/main
                      git pull
                      cp .env.prod .env
                      npm run build
                      pm2 delete thanh-api || true
                      pm2 start dist/main.js --name thanh-api
                      pm2 save
                      exit 0
            - name: Get current date
              id: date
              run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
            - name: Get branch name
              id: branch
              run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
            - name: Send Discord message on success
              if: success()
              uses: Ilshidur/action-discord@master
              env:
                  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
              with:
                  args: 'Build succeeded on branch ${{ steps.branch.outputs.branch }} by ${{ github.actor }} on ${{ steps.date.outputs.date }}! :tada:'
            - name: Send Discord message on failure
              if: failure()
              uses: Ilshidur/action-discord@master
              env:
                  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
              with:
                  args: '‚ùå Build failed on branch ${{ steps.branch.outputs.branch }} by ${{ github.actor }} on ${{ steps.date.outputs.date }}!'
